// STGチャレンジ
// 第一弾：つぶやきプロでどこまでSTGに近付けるか
// レッツチャレンジ！
// は、やめにしよう。
// 仕様書
// 敵が一匹出てくる。左から出てきて右へ消える。その間一定間隔で自機狙いを出し続ける。
// 画面端に着いたら自滅
// それでクリアの表示
// スタートの表示から始めて
// タイトルで上から順にやさしいふつうむずかしいを選んでクリックすると始まる
// タイトルはクリックで次
// スタートは文字が右から飛んできて止まってそのまま消えていく感じ
// その間にゲームオーバーにならないように敵の出現タイミングを工夫する
// クリアしたらクリックでセレクトに戻る
// タイトル→セレクト→スタート→プレイ→ゲームオーバー→セレクト
// プレイ→クリア→セレクト
// スタートとゲームオーバーは文字を出して処理を止めるだけ
// 難易度は射出間隔を狭めるだけにする
// そんな感じ。
// 武器はマシンガンのみ


// 進み続ける
// 一次不等式を満たす間は進み続ける
// 一定時間進み続ける
// バリエーションはそのくらい？
// 一次不等式を満たす間、向きを変え続けるとか（カーブ）
// 一次不等式を満たす間、加速し続けるとか？
// 発射を始めるとかやめるとか
// t付けた。一定フレーム、とかもやりたいよね。

// ちょっとまってー。
// 弾丸の方も
// 一度にいくつか
// うーん？？

// 攻撃パターンが多い場合は別クラスにしてパターン配列を・・

// bulletがbulletを出すパターン
// 1:散開する場合（自分は消える）
// 2:自分の分身を5つくらい出してテールみたいに動く
// 3:自分の周りに回転する分身を作り出すのもあり
// 敵がそういう感じでバリアみたいにbulletを張るのも面白そう（位置の更新を何かにゆだねる）
// 更新元がいなくなったら勝手な方向に飛んでいくのもよくあるパターン

// waitとかbackとかループカウンタとか重複が多いよね。
// 3つもあるとさすがにクラスにしたくなるよね。何とかしよう。

// fireIntervalが正の時fireCountを減らす
// fireCountが0になるたびにshotを使ってbulletをmasterに渡す
// masterはaliveでないbulletを次々排除
// fireCountはすぐIntervalに戻す感じ
// 命令で双方を同時に0にしたりshotの内容を変えたりする
// shotはどんな感じ？直径とか色についてはこれも
// それは別、形と動き
// 数学みたいに定義すると、bulletを出すだけなのがenemy, bulletもbulletを出す。
// enemyはlife, bulletはdamageを持つ、その点で異なる。
// 衝突の際にbulletは消えることもあるし消えないこともある（貫通弾）。
// enemyはlifeが0にならない限りは消えない
// ブリンク無し、接触していればダメージ。
// bullet同士で相殺するかどうかは検討中、貫通と同じでフラグにする？
// 共通項はcommandで動きとbulletの射出に関するあれこれを指定するところ。
// intervalに正の数を入れるとその間隔で・・0にすると戻る。

// enemyはbulletを作るがplayはenemyを作るわけで階層構造
// さらにplayerもbulletを作るのでもう大変
// shotは複数の弾丸を作る命令の場合もあってもう大変

// 衝突判定1:プレイヤーが敵に当たったら10ダメージ（ブリンク30フレーム）
// 衝突判定2:プレイヤーの弾が敵に当たったらダメージ（ブリンク無し）
// 衝突判定3:敵の弾がこっちに当たったらダメージ（ブリンク30フレーム）
// colliderにindexを設けて、バリデーションとする感じ。player, enemy, playerBullet, enemyBulletを0, 1, 2, 3として、
// 0と1, 1と2, 0と3が判定対象になる。

// プレイヤーは敵に当たった時に固定ダメージを受ける
// 敵はbulletに当たったときbulletに設定されたダメージを受ける
// こっちは敵のbulletに当たった時敵のbulletに設定されたダメージを受ける
// 敵はやられたらエフェクト
// こっちもやられたらエフェクト
// 弾は当たったら消滅する（消滅しないこともある・・フラグで・・今はいい）
// エフェクトがupdateしてる間はゲームオーバーにしないなど

// ゲームオーバーの条件；playerがnot aliveかつkilledEffectArrayが空っぽ
// クリアの条件：generatorがnot alive.（敵を最後まで出し切るという意味）

// length書き忘れはもうやめようね

// 2019-10-13
// やること
// とりあえずgithubにうつす
// あっちのやつはもう消す（失敗作）
// 一応コードは残すけどね
// commandArrayっぽいのがいくつもあるからまとめてクラスで書きたい感じ（既に作ったやつの移植）
// まとめて書くといえばupdateとrenderまとめるんだっけ。まとめないと。
// loopカウンタとか重複しすぎだからクラスを作って統一的に管理したい
// shot増やしてダブルクリックで変更
// 敵のライフゲージ
// ボス（まだいい）
// 衝突判定を四分木で書くの

// 敵
// ただ直進
// 途中まで行ってからプレイヤーの方向に直進
// 向かってきて左端で折り返して右端で消えるとか
// ウェーブしながら直進
// 上下から出てきて途中から左に直進
// などなど
// 動きのパターンだけ別に作ってあてはめるのもありかもね。そうなると敵とは何かって話になりそうだけど。
// グラフィック、HP、攻撃間隔、移動パターン、んー。

// 今日仕事しててこうしたいなと思ったこと
// 判定は四角形にしよ、で、そのうちグラフィックとか？
// あとenemyのcommandArrayをもうひとつ増やして、HPが0になったらやられるのとか命令できるように。
// そうすればHPが減った時のパターンチェンジとか、直接命令できるようになるし。その・・たとえば、
// HPがこれこれより低くなったら攻撃も移動もやめてある場所に向かって移動したのち（特定の場所に向かうあれ）
// （特定の場所に向かって一定のフレーム数で進むやつ、mapで簡単に書ける）
// 攻撃も移動も全く別のパターン、とか。
// で、デフォルトは「HPが0になったらalive=false」
